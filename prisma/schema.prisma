generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          String     @id @default(uuid())
  username    String     @unique
  nomeBase    String
  senha       String
  email       String?
  dataCriacao DateTime   @default(now())
  desculpas   Desculpa[]
  votos       Voto[]
}

model Desculpa {
  id          String   @id @default(uuid())
  texto       String
  categoria   String
  contexto    String
  dataCriacao DateTime @default(now())
  contadorVotos Int    @default(0) // Contador de votos para melhorar a performance
  autorId     String
  autor       Usuario  @relation(fields: [autorId], references: [id])
  votos       Voto[]

  @@index([autorId]) //melhora a performance de consultas por autor
}

model Voto {
  id          String   @id @default(uuid())
  desculpaId  String
  usuarioId   String
  desculpa    Desculpa @relation(fields: [desculpaId], references: [id], onDelete: Cascade)
  usuario     Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  dataCriacao DateTime @default(now()) // Registra quando o voto foi criado

  @@unique([desculpaId, usuarioId]) // Garante que um usuário só vote uma vez por desculpa
  @@index([usuarioId]) // Melhora performance de consultas por usuário
  @@index([desculpaId]) // Melhora performance de consultas por desculpa

}
